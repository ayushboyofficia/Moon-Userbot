from pyrogram import Client, filters
from Moon.helpers.basic import edit_or_reply
from config import HANDLER as hl

FONT_STYLES = {
    'bold': '­ЮЌД­ЮЌх­ЮЌХ­Юўђ ­ЮЌХ­Юўђ ­ЮЌ»­ЮЌ╝­ЮЌ╣­ЮЌ▒ ­ЮўЂ­ЮЌ▓­ЮўЁ­ЮўЂ',
    'italic': '­ЮЎЈ­ЮЎЮ­ЮЎъ­ЮЎе ­ЮЎъ­ЮЎе ­ЮЎъ­ЮЎЕ­ЮЎќ­ЮЎА­ЮЎъ­ЮЎў ­ЮЎЕ­ЮЎџ­ЮЎГ­ЮЎЕ',
    'mono': '­ЮџЃ­ЮџЉ­Юџњ­Юџю ­Юџњ­Юџю ­Юџќ­Юџў­ЮџЌ­Юџў ­ЮџЮ­Юџј­ЮџА­ЮџЮ',
    'small': 'рхЌ╩░РЂ▒╦б РЂ▒╦б ╦брхљрхЃ╦А╦А рхЌрхЅ╦БрхЌ',
    'wide': '№╝┤№йѕ№йЅ№йЊсђђ№йЅ№йЊсђђ№йЌ№йЅ№йё№йЁсђђ№йћ№йЁ№йў№йћ'
}

@Client.on_message(filters.command("font", hl) & filters.me)
async def font_gen(client: Client, message: Message):
    if len(message.command) < 3:
        styles = "\n".join([f"Рђб `{hl}font {k} text`" for k in FONT_STYLES.keys()])
        return await edit_or_reply(message, f"**Available Styles:**\n{styles}")
    
    style = message.command[1].lower()
    text = " ".join(message.command[2:])
    
    if style not in FONT_STYLES:
        return await edit_or_reply(message, "Invalid font style!")
    
    # Conversion logic would go here (implementation needed)
    converted = f"`{text}` Рєњ {FONT_STYLES[style]}"
    await edit_or_reply(message, converted)
